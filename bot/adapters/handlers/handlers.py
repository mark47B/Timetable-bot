from loader import dp, bot
from aiogram import types, Router

from ..buttons import get_timetable


from aiogram import types
from aiogram.filters import Command


router = Router()


@router.message(Command("start"))
async def process_start_command(message: types.Message):
    """
    This handler will be called when user sends `/start` or `/help` command
    """
    await message.answer("–ü—Ä–∏–≤–µ—Ç\!\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–µ—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –∏ —É–∑–Ω–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã üòâ", reply_markup=get_timetable())


# @router.message(Command("reserve"))
# async def process_reserve_command(message: types.Message):
#     """
#     This handler will be called when user sends `/start` or `/help` command
#     """
#     await message.reply("–ü—Ä–∏–≤–µ—Ç\\!\n –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–µ—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –∏ —É–∑–Ω–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã üòâ", reply_markup=inline_timetable)
